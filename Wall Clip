-- LocalScript (StarterPlayerScripts)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- GUI setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "WallClipGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

local clipButton = Instance.new("TextButton")
clipButton.Size = UDim2.new(0, 150, 0, 50)
clipButton.Position = UDim2.new(0.5, -75, 0.8, 0)
clipButton.Text = "Hold to Clip"
clipButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
clipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clipButton.Parent = screenGui

-- State variable
local isClipping = false

-- Wall clip function
local function wallClip()
    local rayOrigin = hrp.Position
    local rayDirection = hrp.CFrame.LookVector * 10 -- max distance to check for wall

    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

    local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
    if result then
        local wallThickness = (result.Position - rayOrigin).Magnitude
        hrp.CFrame = hrp.CFrame + hrp.CFrame.LookVector * (wallThickness + 2) -- teleport past wall
    end
end

-- RunService loop for continuous clipping
RunService.RenderStepped:Connect(function()
    if isClipping then
        wallClip()
    end
end)

-- Button events
clipButton.MouseButton1Down:Connect(function()
    isClipping = true
end)

clipButton.MouseButton1Up:Connect(function()
    isClipping = false
end)
